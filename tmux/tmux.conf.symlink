# PREFIX BINDING
# ===========================================================================
unbind C-b
unbind-key C-a
set-option -g prefix C-a
set -g prefix C-a
bind C-a send-prefix
bind-key C-a send-prefix
bind-key a last-pane

# GENERAL SETTINGS
# ===========================================================================
set -g history-limit 100000
set -g set-titles on
# This helps when exiting insert mode in Vim: http://superuser.com/a/252717/65504.
set -sg escape-time 0
# 256 color support
set -g terminal-overrides 'xterm:colors=256'
set -g default-terminal "screen-256color"
set-option -g default-shell "/usr/local/bin/zsh"
# Fixes for ssh-agent.
set -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"
# Start window numbers from 1
set -g base-index 1
# Fix LSOpenURLsWithRole() error on OS X. Requires reattach-to-user-namespace to be installed.
set-option -g default-command "reattach-to-user-namespace -l $SHELL"
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"
# allow the cursor to be changed by vim
set-option -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'
# all for internal terminals to be scrolled
set -g terminal-overrides 'xterm*:smcup@:rmcup@'


# KEY BINDINGS
# ===========================================================================
unbind C-c
unbind C-t
unbind C-y
unbind C-p
unbind [
unbind ]
unbind C-space
unbind space
unbind C-f
unbind f

# Clipboard
bind-key C-y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind-key C-p run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
bind C-d detach			# the same as d so you don't have to depress Ctrl
bind -r C-R source-file ~/.tmux.conf \; display-message "Configuration reloaded."
bind-key r refresh-client
# Splitting panes
bind '|' split-window -h -c "#{pane_current_path}"
bind '_' split-window -v -c "#{pane_current_path}"
bind -r C-t new-window -c "#{pane_current_path}"
bind -r C-x kill-pane
bind p previous-window
bind -r C-space select-pane -t :.+
bind -r C-f resize-pane
# Smart pane switching with awareness of vim (requires vim-tmux-navigator) splits
# https://github.com/ivanbrennan/dotfiles/blob/master/tmux.conf
# NOTE: added weechat in the mix to maintain ctrl+h/j/k/l behaviors
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(weechat|view|n?vim?)(diff)?$"'
bind -n C-h if-shell  "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell  "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell  "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell  "$is_vim" "send-keys C-l" "select-pane -R"
bind    C-l send-keys 'C-l'
# TODO: thieve these keybindings from @kaldrenon, may fix your ctrl-h issue with nvim:
# https://gist.github.com/kaldrenon/d8cfe7da05c6960a67fc


# VI MODE
# ===========================================================================
bind Escape copy-mode
# Use vim keybindings
setw -g mode-keys vi
# Setup 'v' to being selection as in vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# Update default binding of 'Enter' to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"


# STATUS BAR
# ===========================================================================
# Settings
# ---------------------------------------------------------
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "centre" #don't change this spelling
set-option -g status-position top

set-window-option -g utf8 on
set-window-option -g monitor-activity off
set-window-option -g xterm-keys on
set-window-option -g automatic-rename on
set-window-option -g aggressive-resize on

# Colors
# ---------------------------------------------------------
set-option -g pane-border-fg colour235
set-option -g pane-active-border-fg colour240
set-option -g pane-active-border-fg red

set-option -g status-bg colour234
set-option -g status-fg yellow
set-option -g status-attr dim

set-window-option -g window-status-bg colour234
set-window-option -g window-status-fg colour238 #yellow
set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg brightred
set-window-option -g window-status-current-bg colour236
set-window-option -g window-status-current-attr bright

set-option -g message-fg colour166

set-window-option -g clock-mode-colour colour64 #green

set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

set-window-option -g window-status-format ' ◦ #W '
set-window-option -g window-status-current-format ' ◦ #W '
set-window-option -g window-status-current-format "#[fg=blue] ● #W #[fg=colour28]"

# Bar Layout
# ---------------------------------------------------------
set -g status-left-length 60
set -g status-left "#[fg=green]#S | #{cpu_percentage} #[fg=brightblue] ⓦ #(dig +short myip.opendns.com @resolver1.opendns.com) #[fg=yellow]ⓛ #(ifconfig en0 | ag 'inet ' | awk '{print $2}') #(ifconfig en1 | ag 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | ag 'inet ' | awk '{print \"vpn \" $2}') "
set -g status-right-length 120
set -g status-right "#(~/.dotfiles/bin/radiant) #(~/.dotfiles/bin/battery -t -p) #[fg=blue] %a, %b %d #[fg=green] %I:%M %p"

# TMUX PLUGIN MANAGER
# ===========================================================================
# tmux plugin manager: github.com/tmux-plugins/tpm
set-environment -g TMUX_PLUGIN_MANAGER_PATH '$HOME/.tmux/tmux-plugins/'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-battery'
# set -g @plugin 'tmux-plugins/tmux-sessionist'
# set -g @plugin 'tmux-plugins/tmux-pain-control'
# set -g @plugin 'tmux-plugins/tmux-example-plugin'
# set -g @plugin 'tmux-plugins/tmux-online-status'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-sidebar'

# install tpm if not already installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

run-shell '~/.tmux/plugins/tpm/tpm'
