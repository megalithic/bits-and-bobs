# NOTES
# ...........................................................................
# To get 24-bit/True Color mode for neovim and other CLI stuffs, need this patched version of tmux:
# brew install https://raw.githubusercontent.com/choppsv1/homebrew-term24/02f04ef70ddad41a81c735d709b2a3b23a3a4b91/tmux.rb
# * may need to unlink existing installed version of tmux

# KEY BINDINGS
# ===========================================================================
unbind C-b
unbind C-a
unbind C-c
unbind C-t
unbind C-y
unbind C-p
unbind C-h
unbind C-j
unbind C-k
unbind C-l
unbind [
unbind ]
unbind C-space
unbind space
unbind C-f
unbind f
unbind up
unbind down
unbind left
unbind right

# Prefix like it's gnu-screen
set -g prefix C-a
set -g prefix C-a
bind C-a send-prefix
bind-key C-a send-prefix

bind C-d detach			# the same as d so you don't have to depress Ctrl
bind -r C-R source-file ~/.tmux.conf \; display-message "Configuration reloaded."
bind-key r refresh-client

# put us in copy-mode, where i typically then hit ctrl-b again to scroll up
bind -r C-b copy-mode -u

# Splitting panes
bind '|' split-window -h -c "#{pane_current_path}"
bind '_' split-window -v -c "#{pane_current_path}"
bind '-' split-window -v -c "#{pane_current_path}"
bind -r C-t new-window -c "#{pane_current_path}"
bind -r C-x kill-pane
bind -r C-q kill-pane
bind p previous-window
bind -r C-Space last-window

# Resizing panes
bind-key -n C-Up resize-pane -U 15
bind-key -n C-Down resize-pane -D 15
bind-key -n C-Left resize-pane -L 25
bind-key -n C-Right resize-pane -R 25

# Vi-like movements between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of vim splits (from https://github.com/christoomey/vim-tmux-navigator)
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(weechat|view|n?vim?x?)(diff)?$"'
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(weechat|view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# GENERAL SETTINGS
# ===========================================================================
# set -sg	update-environment TERM_PROFILE
set -g history-limit 25000
set -g set-titles on

set -g default-terminal "tmux-256color"
set -g default-shell "/usr/local/bin/zsh"

# fix for NVIM_TUI_ENABLE_CURSOR_SHAPE in tmux
# https://github.com/nathanaelkane/dotfiles/commit/9607d826b9d408595de2e3fe7de0abec1e94fa87
set -ga terminal-overrides ',xterm-256color:Tc'
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set -as terminal-overrides ',xterm*:sitm=\E[3m'

# Start window numbers from 1
set -g base-index 1
# Fix LSOpenURLsWithRole() error on OS X. Requires reattach-to-user-namespace to be installed.
set -g default-command "reattach-to-user-namespace -l $SHELL"
# set -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# mices!
set -g mouse on

# enable focus events for wincent/terminus
set -g focus-events on

# Disable assume-paste-time, so that iTerm2's "Send Hex Codes" feature works with tmux 2.1.
# https://github.com/edruder/maximum-awesome/commit/9e3d07f450ac60ec142c82e8b2ffb2777bf99fb4
set -g assume-paste-time 0

# Allow the arrow key to be used immediately after changing windows
set -g repeat-time 0

# nvim trickery
set -g escape-time 0

# VI MODE
# ===========================================================================
bind Escape copy-mode
# Use vim keybindings
setw -g mode-keys vi
set -g @shell_mode 'vi'

# Setup 'v' to being selection as in vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy y copy-pipe "pbcopy"

# Update default binding of 'Enter' to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy Enter copy-pipe "pbcopy"

# Various keybindings to try:
# https://github.com/hamvocke/dotfiles/blob/master/tmux/.tmux.conf#L48
# fix pbcopy/pbpaste
# if 'command -v reattach-to-user-namespace >/dev/null' \
#     'set -gq @osx-pasteboard true'

# if 'tmux show -gv @osx-clipboard' \
#     'set -g default-command "reattach-to-user-namespace -l $SHELL"'

# present a menu of URLs to open from the visible pane. sweet.
bind-key u capture-pane \;\
    save-buffer /tmp/tmux-buffer \;\
    split-window -l 10 "urlview /tmp/tmux-buffer"

# STATUS BAR
# ===========================================================================
# Settings
# ---------------------------------------------------------
set -g status on
set -g status-interval 1
set -g status-justify "centre" #don't change this spelling
set -g status-position top
set -g allow-rename on

setw -g monitor-activity on
setw -g visual-activity off
setw -g xterm-keys on
setw -g automatic-rename on
setw -g aggressive-resize on

# Display alert messages for 1.0 seconds
set -g display-time 1000

# Colors
# ---------------------------------------------------------
# # set the pane border colors
# set -g pane-border-fg colour250
# set -g pane-border-bg colour236
# set -g pane-active-border-fg colour250
# set -g pane-active-border-bg colour250

# NEW ACTIVE/INACTIVE PANE/WINDOW color stuff
# http://stackoverflow.com/questions/25532773/change-background-color-of-active-or-inactive-pane-in-tmux/33553372#33553372
# set inactive/active window styles
# ---
# FIXME: this is NOT working so well, specifically for loading vim within an
# active window/pane. the background is way darker outside of vim:
# set -g window-style 'fg=colour247,bg=colour236' ##1A1D23 (http://colllor.com/2b303b)
# set -g window-active-style 'fg=colour250,bg=black'

# highlight current/active pane
set -g display-panes-active-colour colour33
set -g display-panes-colour colour166

set -g status-bg colour234
set -g status-fg yellow
set -g status-attr dim

setw -g window-status-bg colour234
setw -g window-status-fg colour239
setw -g window-status-attr dim
setw -g window-status-activity-attr bold

setw -g window-status-current-bg colour236
setw -g window-status-current-attr bright

# colorize messages in the tmux command line
# set-option -g message-fg colour166
set -g message-bg black #base02
set -g message-fg brightred #orange
set -g message-attr bold

setw -g clock-mode-colour colour64

# statusbar format
setw -g window-status-format ' ◦ #W '
setw -g window-status-current-format "#[fg=blue] ● #W #[fg=colour28]"

# Bar Layout
# ---------------------------------------------------------
# http://manpages.ubuntu.com/manpages/precise/en/man3/strftime.3.html
set -g status-left-length 60
set -g status-left "#[fg=green]#S #(~/.dotfiles/bin/ip-tmux) #{prefix_highlight}"
set -g status-right-length 120
set -g status-right "#(~/.dotfiles/bin/tmux-spotify) #(~/.dotfiles/bin/battery -t -p)#[fg=blue] %a, %b %d #[fg=green]%l:%M %p #[fg=colour255] #[bg=colour236] #{cpu_percentage}"

# TMUX PLUGIN MANAGER
# ===========================================================================

# Settings
# ---------------------------------------------------------
# See Bruno's setup for plugin settings:
# https://github.com/bruno-/dotfiles/blob/master/home/.tmux.conf
# set -g @continuum-restore 'off'
# set -g @continuum-save-interval '60'

# set -g @resurrect-save 'S'
# set -g @resurrect-restore 'E'

# Installation
# ---------------------------------------------------------
# tmux plugin manager: github.com/tmux-plugins/tpm
set-environment -g TMUX_PLUGIN_MANAGER_PATH '$HOME/.tmux/tmux-plugins/'

# plugin settings
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-logging'

# install tpm if not already installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

run-shell '~/.tmux/plugins/tpm/tpm'
